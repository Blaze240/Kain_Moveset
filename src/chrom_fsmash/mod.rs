use {
    smash::{
        app::{lua_bind::*, sv_animcmd::*},
        lib::lua_const::*,
        lua2cpp::*,
        phx::*,
    },
    smash_script::*,
    smashline::*,
};

unsafe extern "C" fn chrom_attacks4(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 14.0);
    execute(agent.lua_state_agent, 14.0);
    if macros::is_excute(agent) {
        WorkModule::on_flag(
            agent.module_accessor,
            *FIGHTER_STATUS_ATTACK_FLAG_START_SMASH_HOLD,
        );
    }
    macros::FT_MOTION_RATE(agent, 0.8);
    frame(agent.lua_state_agent, 24.0);
    macros::FT_MOTION_RATE(agent, 1.0);
    frame(agent.lua_state_agent, 25.0);
    if macros::is_excute(agent) {
        macros::ATTACK(
            agent,
            1,
            0,
            Hash40::new("top"),
            12.0,
            361,
            90,
            0,
            55,
            4.5,
            0.0,
            5.5,
            6.0,
            None,
            None,
            None,
            0.6,
            1.0,
            *ATTACK_SETOFF_KIND_ON,
            *ATTACK_LR_CHECK_F,
            false,
            0,
            0.0,
            0,
            false,
            false,
            false,
            false,
            true,
            *COLLISION_SITUATION_MASK_GA,
            *COLLISION_CATEGORY_MASK_ALL,
            *COLLISION_PART_MASK_ALL,
            false,
            Hash40::new("collision_attr_normal"),
            *ATTACK_SOUND_LEVEL_M,
            *COLLISION_SOUND_ATTR_KICK,
            *ATTACK_REGION_OBJECT,
        );
        macros::ATTACK(
            agent,
            2,
            0,
            Hash40::new("haver"),
            12.0,
            361,
            90,
            0,
            55,
            1.6,
            0.0,
            3.0,
            0.0,
            Some(0.0),
            Some(13.0),
            Some(0.0),
            0.6,
            1.0,
            *ATTACK_SETOFF_KIND_ON,
            *ATTACK_LR_CHECK_F,
            false,
            0,
            0.0,
            0,
            false,
            false,
            false,
            false,
            true,
            *COLLISION_SITUATION_MASK_GA,
            *COLLISION_CATEGORY_MASK_ALL,
            *COLLISION_PART_MASK_ALL,
            false,
            Hash40::new("collision_attr_normal"),
            *ATTACK_SOUND_LEVEL_M,
            *COLLISION_SOUND_ATTR_KICK,
            *ATTACK_REGION_OBJECT,
        );
        macros::ATTACK(
            agent,
            3,
            0,
            Hash40::new("haver"),
            18.0,
            36,
            90,
            0,
            60,
            2.6,
            -0.5,
            16.5,
            0.0,
            Some(-0.5),
            Some(23.0),
            Some(0.0),
            1.45,
            1.0,
            *ATTACK_SETOFF_KIND_ON,
            *ATTACK_LR_CHECK_F,
            false,
            0,
            0.0,
            0,
            false,
            false,
            false,
            false,
            true,
            *COLLISION_SITUATION_MASK_GA,
            *COLLISION_CATEGORY_MASK_ALL,
            *COLLISION_PART_MASK_ALL,
            false,
            Hash40::new("collision_attr_sting"),
            *ATTACK_SOUND_LEVEL_L,
            *COLLISION_SOUND_ATTR_CUTUP,
            *ATTACK_REGION_OBJECT,
        );
        macros::ATTACK(
            agent,
            0,
            0,
            Hash40::new("haver"),
            18.0,
            36,
            90,
            0,
            60,
            2.0,
            -0.5,
            24.0,
            -0.3,
            Some(-0.5),
            Some(26.5),
            Some(-0.3),
            1.45,
            1.0,
            *ATTACK_SETOFF_KIND_ON,
            *ATTACK_LR_CHECK_F,
            false,
            0,
            0.0,
            0,
            false,
            false,
            false,
            false,
            true,
            *COLLISION_SITUATION_MASK_GA,
            *COLLISION_CATEGORY_MASK_ALL,
            *COLLISION_PART_MASK_ALL,
            false,
            Hash40::new("collision_attr_sting"),
            *ATTACK_SOUND_LEVEL_L,
            *COLLISION_SOUND_ATTR_CUTUP,
            *ATTACK_REGION_OBJECT,
        );
    }
    wait(agent.lua_state_agent, 3.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 85.0);
}

unsafe extern "C" fn chrom_attacks4hi(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 14.0);
    execute(agent.lua_state_agent, 14.0);
    if macros::is_excute(agent) {
        WorkModule::on_flag(
            agent.module_accessor,
            *FIGHTER_STATUS_ATTACK_FLAG_START_SMASH_HOLD,
        );
    }
    macros::FT_MOTION_RATE(agent, 0.8);
    frame(agent.lua_state_agent, 24.0);
    macros::FT_MOTION_RATE(agent, 1.0);
    frame(agent.lua_state_agent, 25.0);
    if macros::is_excute(agent) {
        macros::ATTACK(
            agent,
            1,
            0,
            Hash40::new("top"),
            13.0,
            361,
            86,
            0,
            55,
            4.5,
            0.0,
            5.5,
            6.0,
            None,
            None,
            None,
            0.6,
            1.0,
            *ATTACK_SETOFF_KIND_ON,
            *ATTACK_LR_CHECK_F,
            false,
            0,
            0.0,
            0,
            false,
            false,
            false,
            false,
            true,
            *COLLISION_SITUATION_MASK_GA,
            *COLLISION_CATEGORY_MASK_ALL,
            *COLLISION_PART_MASK_ALL,
            false,
            Hash40::new("collision_attr_normal"),
            *ATTACK_SOUND_LEVEL_M,
            *COLLISION_SOUND_ATTR_KICK,
            *ATTACK_REGION_OBJECT,
        );
        macros::ATTACK(
            agent,
            2,
            0,
            Hash40::new("haver"),
            13.0,
            361,
            86,
            0,
            55,
            1.6,
            0.0,
            3.0,
            0.0,
            Some(0.0),
            Some(13.0),
            Some(0.0),
            0.6,
            1.0,
            *ATTACK_SETOFF_KIND_ON,
            *ATTACK_LR_CHECK_F,
            false,
            0,
            0.0,
            0,
            false,
            false,
            false,
            false,
            true,
            *COLLISION_SITUATION_MASK_GA,
            *COLLISION_CATEGORY_MASK_ALL,
            *COLLISION_PART_MASK_ALL,
            false,
            Hash40::new("collision_attr_normal"),
            *ATTACK_SOUND_LEVEL_M,
            *COLLISION_SOUND_ATTR_KICK,
            *ATTACK_REGION_OBJECT,
        );
        macros::ATTACK(
            agent,
            3,
            0,
            Hash40::new("haver"),
            19.5,
            36,
            86,
            0,
            60,
            2.6,
            -0.5,
            16.5,
            0.0,
            Some(-0.5),
            Some(23.0),
            Some(0.0),
            1.35,
            1.0,
            *ATTACK_SETOFF_KIND_ON,
            *ATTACK_LR_CHECK_F,
            false,
            0,
            0.0,
            0,
            false,
            false,
            false,
            false,
            true,
            *COLLISION_SITUATION_MASK_GA,
            *COLLISION_CATEGORY_MASK_ALL,
            *COLLISION_PART_MASK_ALL,
            false,
            Hash40::new("collision_attr_sting"),
            *ATTACK_SOUND_LEVEL_L,
            *COLLISION_SOUND_ATTR_CUTUP,
            *ATTACK_REGION_OBJECT,
        );
        macros::ATTACK(
            agent,
            0,
            0,
            Hash40::new("haver"),
            19.5,
            36,
            86,
            0,
            60,
            2.0,
            -0.5,
            24.0,
            -0.3,
            Some(-0.5),
            Some(26.5),
            Some(-0.3),
            1.35,
            1.0,
            *ATTACK_SETOFF_KIND_ON,
            *ATTACK_LR_CHECK_F,
            false,
            0,
            0.0,
            0,
            false,
            false,
            false,
            false,
            true,
            *COLLISION_SITUATION_MASK_GA,
            *COLLISION_CATEGORY_MASK_ALL,
            *COLLISION_PART_MASK_ALL,
            false,
            Hash40::new("collision_attr_sting"),
            *ATTACK_SOUND_LEVEL_L,
            *COLLISION_SOUND_ATTR_CUTUP,
            *ATTACK_REGION_OBJECT,
        );
    }
    wait(agent.lua_state_agent, 3.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 85.0);
}

unsafe extern "C" fn chrom_attacks4lw(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 14.0);
    execute(agent.lua_state_agent, 14.0);
    if macros::is_excute(agent) {
        WorkModule::on_flag(
            agent.module_accessor,
            *FIGHTER_STATUS_ATTACK_FLAG_START_SMASH_HOLD,
        );
    }
    macros::FT_MOTION_RATE(agent, 0.8);
    frame(agent.lua_state_agent, 24.0);
    macros::FT_MOTION_RATE(agent, 1.0);
    frame(agent.lua_state_agent, 25.0);
    if macros::is_excute(agent) {
        macros::ATTACK(
            agent,
            1,
            0,
            Hash40::new("top"),
            11.5,
            361,
            90,
            0,
            55,
            4.5,
            0.0,
            5.5,
            6.0,
            None,
            None,
            None,
            0.6,
            1.0,
            *ATTACK_SETOFF_KIND_ON,
            *ATTACK_LR_CHECK_F,
            false,
            0,
            0.0,
            0,
            false,
            false,
            false,
            false,
            true,
            *COLLISION_SITUATION_MASK_GA,
            *COLLISION_CATEGORY_MASK_ALL,
            *COLLISION_PART_MASK_ALL,
            false,
            Hash40::new("collision_attr_normal"),
            *ATTACK_SOUND_LEVEL_M,
            *COLLISION_SOUND_ATTR_KICK,
            *ATTACK_REGION_OBJECT,
        );
        macros::ATTACK(
            agent,
            2,
            0,
            Hash40::new("haver"),
            11.5,
            361,
            90,
            0,
            55,
            1.6,
            0.0,
            3.0,
            0.0,
            Some(0.0),
            Some(13.0),
            Some(0.0),
            0.6,
            1.0,
            *ATTACK_SETOFF_KIND_ON,
            *ATTACK_LR_CHECK_F,
            false,
            0,
            0.0,
            0,
            false,
            false,
            false,
            false,
            true,
            *COLLISION_SITUATION_MASK_GA,
            *COLLISION_CATEGORY_MASK_ALL,
            *COLLISION_PART_MASK_ALL,
            false,
            Hash40::new("collision_attr_normal"),
            *ATTACK_SOUND_LEVEL_M,
            *COLLISION_SOUND_ATTR_KICK,
            *ATTACK_REGION_OBJECT,
        );
        macros::ATTACK(
            agent,
            3,
            0,
            Hash40::new("haver"),
            17.25,
            36,
            90,
            0,
            60,
            2.0,
            -0.5,
            16.5,
            0.0,
            Some(-0.5),
            Some(23.0),
            Some(0.0),
            1.5,
            1.0,
            *ATTACK_SETOFF_KIND_ON,
            *ATTACK_LR_CHECK_F,
            false,
            0,
            0.0,
            0,
            false,
            false,
            false,
            false,
            true,
            *COLLISION_SITUATION_MASK_GA,
            *COLLISION_CATEGORY_MASK_ALL,
            *COLLISION_PART_MASK_ALL,
            false,
            Hash40::new("collision_attr_sting"),
            *ATTACK_SOUND_LEVEL_L,
            *COLLISION_SOUND_ATTR_CUTUP,
            *ATTACK_REGION_OBJECT,
        );
        macros::ATTACK(
            agent,
            0,
            0,
            Hash40::new("haver"),
            17.25,
            36,
            90,
            0,
            60,
            2.0,
            -0.5,
            24.0,
            -0.3,
            Some(-0.5),
            Some(26.5),
            Some(-0.3),
            1.5,
            1.0,
            *ATTACK_SETOFF_KIND_ON,
            *ATTACK_LR_CHECK_F,
            false,
            0,
            0.0,
            0,
            false,
            false,
            false,
            false,
            true,
            *COLLISION_SITUATION_MASK_GA,
            *COLLISION_CATEGORY_MASK_ALL,
            *COLLISION_PART_MASK_ALL,
            false,
            Hash40::new("collision_attr_sting"),
            *ATTACK_SOUND_LEVEL_L,
            *COLLISION_SOUND_ATTR_CUTUP,
            *ATTACK_REGION_OBJECT,
        );
    }
    wait(agent.lua_state_agent, 3.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 85.0);
}

pub fn install() {
    Agent::new("chrom")
        .game_acmd("game_attacks4_kain", chrom_attacks4, Priority::Low)
        .game_acmd("game_attacks4hi_kain", chrom_attacks4hi, Priority::Low)
        .game_acmd("game_attacks4lw_kain", chrom_attacks4lw, Priority::Low)
        .install();
}
